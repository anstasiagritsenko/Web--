body{ 
    margin: 0; /* убирем внешние отступы.*/
    padding: 0; /* убирем внутренние отступы.*/
	background:#ddcaff;
	display: flex;
}/* оформляем тело цикла*/
a[href] { 
	text-decoration:none; /* убираем подчеркивние. */
	color:	#000; /* цвет текста */
}/* Обращаемся ко всем ссылкам, имеющим атрибут href. */
.menu {
	width:15%; /* ширина */
	text-align:center; /*вырвнивние тексста по центру */
	height:100%; /* высота */
	margin:20px 0; /* внешние отступы*/

} /* Обращаемся к div с классом menu. */
.cont{
	background: #ffffff; /* цвет фон */
	padding:0 50px; /* внутренний отступ сверху и снизу 0, по бокам 50px */
	box-shadow: 0 0 10px #000000; /* тень блока */
	width:70%; /* ширина */
	height:100%; /* всота */
	margin:30px auto; /* внешний отступ сверху и снизу 30px, по бокам выравивание по центру. */ 
	font-size:24px; /* размер шрифта */
	
} /* Обращаемся к div с классом cont. */
.menu div{
    height: 50px; /* высота */
    width: 90%; /* ширина */
    background-color: #a900ff59; /*цвет фона */
    margin: 10px 0; /* внешние отступы */
	padding:5px 10px; /* внутренние отступы */
	text-align:left; /*вырвнивние тексста по левому краю */
}
#d1, #d2, #d3{
	box-shadow: 0 0 10px #000000; /* тень задается для блоков, имеющих id d1, d2, d3 */
} /* обращение сразу к нескольким элементам */
#d2 { 
	background-color: #9eff1f82; /* цвет фона для блока, имеющего id d2 */
}
.menu .first {
	background-color: #aeaeff87; /* фон */
} /* обращение к элементу с классом first, расоложеном в элементе с классом menu */
span {
	color:	#670092; /* цвет текста */
	font-weight:bold; /* жирный текст */
} /* обращение ко всем span */ 

h1::first-letter { 
  font-size: 120%;
  color:#670092; /* цвет текста */
} /* оформляется первая буква строки */
.cont a[href] {
	color:#670092; /* цвет текста */
} /* цвет ссылок в блоке с классом .cont */
.cont a[href]:hover {
	color:#905; /* цвет текста */
} /* цвет ссылок в блоке с классом .cont при наведении мыши */

.p1::after {
  content: "зеленое"; /* псевдоэлемент */
  color: green; /* цвет текста */
} /* создаем псевдоэлемент - последний отомок p1 */
.p1::before {
  content: "♥"; /* псевдоэлемент */
  color:#905; /* цвет текста */
} /* создаем псевдоэлемент - первый отомок p1 */
.p2 {
	width: 100px; /* ширина */
	height: 100px; /* всота */
	background: #791f9f; /* фон */
	font-size:80px; /* размер шрифт */
	text-align: center; /* вравнивание текста по центру */
}
.p2:hover {
	background: #791f9f26; /* фон */
}



/* данные элементы и их оформление взяты с сайта с теорией */
.brush {
    border-left: 6px solid #00458b; /* обводка слева */
    font-size: 1rem; /* размер шрифта */
    line-height: 1.4; /* высота линии */
    margin: 25PX 0; /* внешние отступы */
    max-width: 100%; /* мксимальная высота */
    overflow: auto; /* Свойство CSS overflow определяет, необходимо ли для переполненного блочного элемента содержимое обрезать, предоставить полосы прокрутки или просто отобразить. */
    padding: 24px; /* внутренние отступы */
    width: 100%; /* ширина */
	background:#ddcaff73; /* фон */
}
.token.cdata, .token.comment, .token.doctype, .token.prolog {
    color: #626262; /* цвет текста */
} /* обращение срзу к нескольким классам вложенных элементов */
.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.selector, .token.string {
    color: #276738; /* цвет текста */
}/* обращение срзу к нескольким классам  вложенных элементов */
.token.punctuation {
    color: #999; /* цвет текста */
} /* обращение к элементу с клссом .punctuation, который вложен в элемент с классом .token */
.token.boolean, .token.constant, .token.deleted, .token.number, .token.property, .token.symbol, .token.tag {
    color: #905; /* цвет текста */
} /* обращение срзу к нескольким классам вложенных элементов */
*, :after /*создаёт псевдоэлемент, который является последним потомком выбранного элемента.*/, :before /*  создаёт псевдоэлемент,который является первым потомком выбранного элемента. */{
    box-sizing: border-box; /*Применяется для изменения алгоритма расчета ширины и высоты элемента.

Согласно спецификации CSS ширина блока складывается из ширины контента (width), значений отступов (margin), полей (padding) и границ (border). Аналогично обстоит и с высотой блока. Свойство box-sizing позволяет изменить этот алгоритм, чтобы свойства width и height задавали размеры не контента, а размеры блока.

border-box
Свойства width и height включают в себя значения полей и границ, но не отступов (margin).
 */
}
/*аналогично*/ 
.token.punctuation {
    color: #999; /* цвет текста */
}
*, :after, :before {
    box-sizing: border-box;
}
.token.punctuation {
    color: #999; /* цвет текста */
}
.token.punctuation {
    color: #999; /* цвет текста */
}
